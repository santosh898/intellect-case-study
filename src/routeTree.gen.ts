/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SignalLevelLiteLazyImport = createFileRoute('/signal-level-lite')()
const SignalLevelLazyImport = createFileRoute('/signal-level')()
const ProgressIndicatorLazyImport = createFileRoute('/progress-indicator')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignalLevelLiteLazyRoute = SignalLevelLiteLazyImport.update({
  path: '/signal-level-lite',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/signal-level-lite.lazy').then((d) => d.Route),
)

const SignalLevelLazyRoute = SignalLevelLazyImport.update({
  path: '/signal-level',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signal-level.lazy').then((d) => d.Route))

const ProgressIndicatorLazyRoute = ProgressIndicatorLazyImport.update({
  path: '/progress-indicator',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/progress-indicator.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/progress-indicator': {
      id: '/progress-indicator'
      path: '/progress-indicator'
      fullPath: '/progress-indicator'
      preLoaderRoute: typeof ProgressIndicatorLazyImport
      parentRoute: typeof rootRoute
    }
    '/signal-level': {
      id: '/signal-level'
      path: '/signal-level'
      fullPath: '/signal-level'
      preLoaderRoute: typeof SignalLevelLazyImport
      parentRoute: typeof rootRoute
    }
    '/signal-level-lite': {
      id: '/signal-level-lite'
      path: '/signal-level-lite'
      fullPath: '/signal-level-lite'
      preLoaderRoute: typeof SignalLevelLiteLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ProgressIndicatorLazyRoute,
  SignalLevelLazyRoute,
  SignalLevelLiteLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/progress-indicator",
        "/signal-level",
        "/signal-level-lite"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/progress-indicator": {
      "filePath": "progress-indicator.lazy.tsx"
    },
    "/signal-level": {
      "filePath": "signal-level.lazy.tsx"
    },
    "/signal-level-lite": {
      "filePath": "signal-level-lite.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
